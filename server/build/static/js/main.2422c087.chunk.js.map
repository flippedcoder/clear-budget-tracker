{"version":3,"sources":["components/common/_Menu.jsx","components/common/Header.jsx","components/CreateItemModal.jsx","components/Home.jsx","components/CreateGoalModal.jsx","components/Goals.jsx","components/Items.jsx","components/Logout.jsx","components/Settings.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["_Menu","id","to","Component","Header","state","showMenu","openMenu","bind","this","setState","menu","onClick","icon","faBars","CreateItemModal","shouldCloseModal","closeModal","saveItem","e","itemData","category","target","value","cost","title","axios","post","className","onSubmit","faBomb","htmlFor","type","name","step","Home","itemList","showItemModal","statsGraphType","total","getAllItems","showAddItemModal","showStatsByType","showStatsByWeek","get","then","data","forEach","item","prevState","concat","newItemModal","statsGraph","billsData","filter","foodData","stuffData","billsTotal","foodTotal","stuffTotal","bill","food","stuff","colorScale","cornerRadius","x","y","height","innerRadius","theme","VictoryTheme","material","style","fill","faPlusSquare","CreateGoalModal","saveGoal","goalData","completeByDate","isComplete","Goals","goalList","showGoalModal","getAllGoals","showAddGoalModal","updateGoalStatus","goalId","newGoalModal","map","goal","goalStatusIcon","isCompleted","faCheck","key","_id","Date","toLocaleDateString","Items","sortItems","_sortByDate","_sortByType","sortBy","sortedItems","sort","a","b","date","getTime","onChange","Logout","Settings","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4YA4BeA,G,+LArBP,OACI,yBAAKC,GAAG,QACJ,4BACI,4BACI,kBAAC,IAAD,CAAMC,GAAG,UAAT,UAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,WAAT,kB,GAfJC,cCyCLC,E,YAtCX,aAAe,IAAD,8BACV,+CAEKC,MAAQ,CACTC,UAAU,GAGd,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAPN,E,wEAWVC,KAAKC,SAAS,CACVJ,UAAU,M,+BAKd,IAAIK,EAAO,KAMX,OAJIF,KAAKJ,MAAMC,WACXK,EAAO,kBAAC,EAAD,OAIP,6BACI,yBAAKV,GAAG,UACJ,yCACA,uBAAGW,QAASH,KAAKF,UACb,kBAAC,IAAD,CAAiBM,KAAMC,IACnBb,GAAG,gBAGdU,O,GAjCIR,a,iBCuDNY,G,mBAtDX,aAAe,IAAD,8BACV,+CACKV,MAAQ,CACTW,kBAAkB,GAGtB,EAAKC,WAAa,EAAKA,WAAWT,KAAhB,gBAClB,EAAKU,SAAW,EAAKA,SAASV,KAAd,gBAPN,E,0EAWVC,KAAKC,SAAS,CACVM,kBAAkB,M,+BAIjBG,GACL,IAAIC,EAAW,CACXC,SAAUF,EAAEG,OAAOD,SAASE,MAC5BC,KAAML,EAAEG,OAAOE,KAAKD,MACpBE,MAAON,EAAEG,OAAOG,MAAMF,OAG1BG,IAAMC,KAAK,uCAAwC,CAC/CP,SAAUA,M,+BAKd,OACI,yBAAKQ,UAAYnB,KAAKJ,MAAMW,iBAAmB,SAAW,mBACtD,0BAAMa,SAAUpB,KAAKS,UACjB,kBAAC,IAAD,CAAiBL,KAAMiB,IACnBF,UAAU,YACVhB,QAASH,KAAKQ,aAClB,6BACI,2BAAOc,QAAQ,SAAf,mBACA,2BAAOC,KAAK,OAAOC,KAAK,WAE5B,6BACI,2BAAOF,QAAQ,YAAf,sBACA,2BAAOC,KAAK,OAAOC,KAAK,cAE5B,6BACI,2BAAOF,QAAQ,QAAf,kBACA,2BAAOC,KAAK,SAASE,KAAK,MAAMD,KAAK,UAEzC,4BAAQD,KAAK,UAAb,mB,GAhDU7B,c,oCCkJfgC,G,mBA/IX,aAAe,IAAD,8BACV,+CACK9B,MAAQ,CACT+B,SAAU,GACVC,eAAe,EACfC,eAAgB,OAChBC,MAAO,GAGX,EAAKC,YAAc,EAAKA,YAAYhC,KAAjB,gBACnB,EAAKiC,iBAAmB,EAAKA,iBAAiBjC,KAAtB,gBACxB,EAAKkC,gBAAkB,EAAKA,gBAAgBlC,KAArB,gBACvB,EAAKmC,gBAAkB,EAAKA,gBAAgBnC,KAArB,gBAZb,E,iFAgBVC,KAAK+B,gB,oCAGM,IAAD,OACVd,IAAMkB,IAAI,yCACLC,MAAK,SAAAT,GACF,IAAIG,EAAQ,EAEZH,EAASU,KAAKC,SAAQ,SAAAC,GAClBT,GAASS,EAAKxB,QAGlB,EAAKd,UAAS,SAAAuC,GAAS,MAAK,CACxBb,SAAUa,EAAUb,SAASc,OAAOd,EAASU,MAC7CP,MAAOA,W,yCAMnB,IAAIF,EAAgB5B,KAAKJ,MAAMgC,cAC/B5B,KAAKC,SAAS,CACV2B,eAAgBA,M,wCAKpB5B,KAAKC,SAAS,CACV4B,eAAgB,W,wCAKpB7B,KAAKC,SAAS,CACV4B,eAAgB,W,+BAKpB,IAAIa,EAAe,KACfC,EAAa,KAEbC,EAAY5C,KAAKJ,MAAM+B,SAASkB,QAAO,SAAAN,GAAI,MAAsB,UAAlBA,EAAK3B,YACpDkC,EAAW9C,KAAKJ,MAAM+B,SAASkB,QAAO,SAAAN,GAAI,MAAsB,SAAlBA,EAAK3B,YACnDmC,EAAY/C,KAAKJ,MAAM+B,SAASkB,QAAO,SAAAN,GAAI,MAAsB,UAAlBA,EAAK3B,YAEpDoC,EAAa,EACbC,EAAY,EACZC,EAAa,EA+CjB,OA7CAN,EAAUN,SAAQ,SAAAa,GACdH,GAAcG,EAAKpC,QAGvB+B,EAASR,SAAQ,SAAAc,GACbH,GAAaG,EAAKrC,QAGtBgC,EAAUT,SAAQ,SAAAe,GACdH,GAAcG,EAAMtC,QAGpBf,KAAKJ,MAAMgC,gBACXc,EAAe,kBAAC,EAAD,OAIfC,EAD8B,SAA9B3C,KAAKJ,MAAMiC,eACE,kBAAC,IAAD,CACTyB,WAAY,CAAC,SAAU,OAAQ,QAC/BC,aAAc,EAGdlB,KAAM,CACF,CAAEmB,EAAG,OAAQC,EAAKR,EAAYjD,KAAKJ,MAAMkC,MAAS,KAClD,CAAE0B,EAAG,QAASC,EAAKT,EAAahD,KAAKJ,MAAMkC,MAAS,KACpD,CAAE0B,EAAG,QAASC,EAAKP,EAAalD,KAAKJ,MAAMkC,MAAS,MAExD4B,OAAQ,IACRC,YAAa,KAIJ,kBAAC,IAAD,CACbC,MAAOC,IAAaC,UAEpB,kBAAC,IAAD,CACEC,MAAO,CAAE1B,KAAM,CAAE2B,KAAM,YACvB3B,KAAM,CACJ,CAAEmB,EAAG,OAAQC,EAAGR,GAChB,CAAEO,EAAG,QAASC,EAAGT,GACjB,CAAEQ,EAAG,QAASC,EAAGP,OAMrB,yBAAK/B,UAAU,aACX,yBAAK3B,GAAG,uBACJ,+CACA,+BAAKQ,KAAKJ,MAAMkC,QAEpB,yBAAKtC,GAAG,uBACJ,yBAAK2B,UAAU,mBACVwB,IAGT,4BAAQxB,UAAU,UACd,yBAAKA,UAAU,2BACX,uCACA,uBAAG3B,GAAG,gBAAgBW,QAASH,KAAKgC,kBAChC,kBAAC,IAAD,CAAiB5B,KAAM6D,QAG/B,yBAAK9C,UAAU,8BACX,8CACA,yBAAKA,UAAU,UACX,uBAAGhB,QAASH,KAAKiC,iBAAjB,WACA,uBAAG9B,QAASH,KAAKkC,iBAAjB,cAIXQ,O,GA1IEhD,cCiDJwE,E,YAlDX,aAAe,IAAD,8BACV,+CACKtE,MAAQ,CACTW,kBAAkB,GAGtB,EAAKC,WAAa,EAAKA,WAAWT,KAAhB,gBAClB,EAAKoE,SAAW,EAAKA,SAASpE,KAAd,gBAPN,E,0EAWVC,KAAKC,SAAS,CACVM,kBAAkB,M,+BAIjBG,GACL,IAAI0D,EAAW,CACXC,eAAgB3D,EAAEG,OAAOwD,eAAevD,MACxCwD,YAAY,EACZtD,MAAON,EAAEG,OAAOG,MAAMF,OAG1BG,IAAMC,KAAK,uCAAwC,CAC/CkD,SAAUA,M,+BAKd,OACI,yBAAKjD,UAAYnB,KAAKJ,MAAMW,iBAAmB,SAAW,mBACtD,0BAAMa,SAAUpB,KAAKmE,UACjB,kBAAC,IAAD,CAAiB/D,KAAMiB,IACnBF,UAAU,YACVhB,QAASH,KAAKQ,aAClB,6BACI,2BAAOc,QAAQ,SAAf,UACA,2BAAOC,KAAK,OAAOC,KAAK,WAE5B,6BACI,2BAAOF,QAAQ,kBAAf,iBACA,2BAAOC,KAAK,OAAOC,KAAK,oBAE5B,4BAAQD,KAAK,UAAb,mB,GA5CU7B,aCqFf6E,G,mBAnFX,aAAe,IAAD,8BACV,+CAEK3E,MAAQ,CACT4E,SAAU,GACVC,eAAe,GAGnB,EAAKC,YAAc,EAAKA,YAAY3E,KAAjB,gBACnB,EAAK4E,iBAAmB,EAAKA,iBAAiB5E,KAAtB,gBACxB,EAAK6E,iBAAmB,EAAKA,iBAAiB7E,KAAtB,gBAVd,E,iFAcVC,KAAK0E,gB,oCAGM,IAAD,OACVzD,IAAMkB,IAAI,yCACLC,MAAK,SAAAoC,GACF,EAAKvE,SAAS,CACVuE,SAAUA,EAASnC,Y,yCAM/B,IAAIoC,EAAgBzE,KAAKJ,MAAM6E,cAE/BzE,KAAKC,SAAS,CACVwE,eAAgBA,M,uCAIPI,GACb,OAAOA,I,+BAGD,IAAD,OACDC,EAAe,KAMnB,OAJI9E,KAAKJ,MAAM6E,gBACXK,EAAe,kBAAC,EAAD,OAIf,yBAAK3D,UAAU,aACX,yBAAK3B,GAAG,iBACJ,iDACA,iDACA,8CACA,uBAAG2B,UAAU,mBACT,4CACA,kBAAC,IAAD,CAAiB3B,GAAG,gBAChBW,QAASH,KAAK2E,iBACdvE,KAAM6D,QAGjBjE,KAAKJ,MAAM4E,SAASO,KAAI,SAAAC,GACrB,IAAIC,EAAiB,KAYrB,OATIA,EADA,EAAKrF,MAAMsF,YACM,kBAAC,IAAD,CAAiB1F,GAAG,qBACjCW,QAAS,EAAKyE,iBACdxE,KAAM+E,MAGO,kBAAC,IAAD,CAAiB3F,GAAG,qBACjCY,KAAMiB,MAGP,yBAAKF,UAAU,MAAMiE,IAAKJ,EAAKK,KAClC,yBAAKlE,UAAU,SAAS6D,EAAKhE,OAC7B,yBAAKG,UAAU,SAAS,IAAImE,KAAKN,EAAKX,gBAAgBkB,sBACtD,yBAAKpE,UAAU,SAAS8D,OAG/BH,O,GA9EGpF,cC2GL8F,G,mBA1GX,aAAe,IAAD,8BACV,+CACK5F,MAAQ,CACT+B,SAAU,GACVC,eAAe,EACfE,MAAO,GAGX,EAAKC,YAAc,EAAKA,YAAYhC,KAAjB,gBACnB,EAAKiC,iBAAmB,EAAKA,iBAAiBjC,KAAtB,gBACxB,EAAK0F,UAAY,EAAKA,UAAU1F,KAAf,gBACjB,EAAK2F,YAAc,EAAKA,YAAY3F,KAAjB,gBACnB,EAAK4F,YAAc,EAAKA,YAAY5F,KAAjB,gBAZT,E,iFAgBVC,KAAK+B,gB,oCAGM,IAAD,OACVd,IAAMkB,IAAI,yCACLC,MAAK,SAAAT,GACF,IAAIG,EAAQ,EAEZH,EAASU,KAAKC,SAAQ,SAAAC,GAClBT,GAASS,EAAKxB,QAGlB,EAAKd,SAAS,CACV0B,SAAUA,EAASU,KACnBP,MAAOA,S,yCAMnB,IAAIF,EAAgB5B,KAAKJ,MAAMgC,cAC/B5B,KAAKC,SAAS,CACV2B,eAAgBA,M,gCAIdlB,GACN,IAAIkF,EAASlF,EAAEG,OAAOC,MAClB+E,EAAc,GAEH,SAAXD,IACAC,EAAc7F,KAAKJ,MAAM+B,SAASmE,KAAK9F,KAAK0F,cAGjC,SAAXE,IACAC,EAAc7F,KAAKJ,MAAM+B,SAASmE,KAAK9F,KAAK2F,cAGhD3F,KAAKC,SAAS,CACV0B,SAAUkE,M,kCAINE,EAAGC,GAIX,OAHY,IAAIV,KAAKS,EAAEE,MAAMC,UACjB,IAAIZ,KAAKU,EAAEC,MAAMC,UAEN,GAAK,I,kCAGpBH,EAAGC,GACX,OAAOD,EAAEnF,SAAWoF,EAAEpF,SAAW,GAAK,I,+BAItC,IAAI8B,EAAe,KAKnB,OAHI1C,KAAKJ,MAAMgC,gBACXc,EAAe,kBAAC,EAAD,OAGf,yBAAKvB,UAAU,aACX,yBAAK3B,GAAG,gBACJ,sCAAYQ,KAAKJ,MAAMkC,OACvB,6BACI,2BAAOR,QAAQ,UAAf,aACA,4BAAQE,KAAK,SAAS2E,SAAUnG,KAAKyF,WACjC,4BAAQ3E,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,UAGR,uBAAGK,UAAU,mBACT,4CACA,kBAAC,IAAD,CAAiB3B,GAAG,gBAAgBW,QAASH,KAAKgC,iBAAkB5B,KAAM6D,QAGjFjE,KAAKJ,MAAM+B,SAASoD,KAAI,SAAAxC,GACrB,OAAO,yBAAKpB,UAAU,MAAMiE,IAAK7C,EAAK8C,KAClC,yBAAKlE,UAAU,SAASoB,EAAKvB,OAC7B,yBAAKG,UAAU,SAASoB,EAAK3B,UAC7B,yBAAKO,UAAU,SAAS,IAAImE,KAAK/C,EAAK0D,MAAMV,sBAC5C,yBAAKpE,UAAU,SAAf,IAAyBoB,EAAKxB,UAGrC2B,O,GArGGhD,cCML0G,E,iLARP,OACI,yBAAKjF,UAAU,aAAf,oB,GALSzB,aCYN2G,E,iLARP,OACI,yBAAKlF,UAAU,aAAf,qB,GALWzB,aC0BR4G,E,iLAfP,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/E,IACjC,kBAAC,IAAD,CAAO8E,KAAK,SAASC,UAAWlC,IAChC,kBAAC,IAAD,CAAOiC,KAAK,SAASC,UAAWjB,IAChC,kBAAC,IAAD,CAAOgB,KAAK,UAAUC,UAAWL,IACjC,kBAAC,IAAD,CAAOI,KAAK,YAAYC,UAAWJ,S,GAZjC3G,aCEEgH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjF,MAAK,SAAAkF,GACjCA,EAAaC,kB","file":"static/js/main.2422c087.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../../css/_Menu.css';\r\n\r\nclass _Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"menu\">\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/items\">Items</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/goals\">Goals</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/settings\">Settings</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/logout\">Log Out</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default _Menu;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../../css/Header.css';\r\nimport _Menu from './_Menu';\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showMenu: false\r\n        };\r\n\r\n        this.openMenu = this.openMenu.bind(this);\r\n    }\r\n\r\n    openMenu() {\r\n        this.setState({\r\n            showMenu: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let menu = null;\r\n\r\n        if (this.state.showMenu) {\r\n            menu = <_Menu />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"header\">\r\n                    <div>username</div>\r\n                    <p onClick={this.openMenu}>\r\n                        <FontAwesomeIcon icon={faBars}\r\n                            id=\"menu-icon\" />\r\n                    </p>\r\n                </div>\r\n                {menu}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBomb } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nimport '../css/Modal.css';\r\n\r\nclass CreateItemModal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            shouldCloseModal: false\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.saveItem = this.saveItem.bind(this);\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            shouldCloseModal: true\r\n        });\r\n    }\r\n\r\n    saveItem(e) {\r\n        let itemData = {\r\n            category: e.target.category.value,\r\n            cost: e.target.cost.value,\r\n            title: e.target.title.value\r\n        };\r\n\r\n        axios.post('http://localhost:3010/api/createItem', {\r\n            itemData: itemData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.state.shouldCloseModal ? \"hidden\" : \"modal-container\")}>\r\n                <form onSubmit={this.saveItem}>\r\n                    <FontAwesomeIcon icon={faBomb}\r\n                        className=\"close-btn\"\r\n                        onClick={this.closeModal} />\r\n                    <div>\r\n                        <label htmlFor=\"title\">Title of item: </label>\r\n                        <input type=\"text\" name=\"title\" />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"category\">Category of item: </label>\r\n                        <input type=\"text\" name=\"category\" />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"cost\">Cost of item: </label>\r\n                        <input type=\"number\" step=\".01\" name=\"cost\" />\r\n                    </div>\r\n                    <button type=\"submit\">Save Item</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateItemModal;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport CreateItemModal from './CreateItemModal';\r\nimport { VictoryArea, VictoryChart, VictoryPie, VictoryTheme } from 'victory';\r\n\r\nimport '../css/Home.css';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            itemList: [],\r\n            showItemModal: false,\r\n            statsGraphType: 'week',\r\n            total: 0\r\n        };\r\n\r\n        this.getAllItems = this.getAllItems.bind(this);\r\n        this.showAddItemModal = this.showAddItemModal.bind(this);\r\n        this.showStatsByType = this.showStatsByType.bind(this);\r\n        this.showStatsByWeek = this.showStatsByWeek.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllItems();\r\n    }\r\n\r\n    getAllItems() {\r\n        axios.get('http://localhost:3010/api/getAllItems')\r\n            .then(itemList => {\r\n                let total = 0;\r\n                \r\n                itemList.data.forEach(item => {\r\n                    total += item.cost;\r\n                });\r\n\r\n                this.setState(prevState => ({\r\n                    itemList: prevState.itemList.concat(itemList.data),\r\n                    total: total\r\n                }));\r\n            });\r\n    }\r\n\r\n    showAddItemModal() {\r\n        let showItemModal = this.state.showItemModal;\r\n        this.setState({\r\n            showItemModal: !showItemModal\r\n        });\r\n    }\r\n\r\n    showStatsByType() {\r\n        this.setState({\r\n            statsGraphType: 'type'\r\n        });\r\n    }\r\n\r\n    showStatsByWeek() {\r\n        this.setState({\r\n            statsGraphType: 'week'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let newItemModal = null;\r\n        let statsGraph = null;\r\n        \r\n        let billsData = this.state.itemList.filter(item => item.category === 'Bills');\r\n        let foodData = this.state.itemList.filter(item => item.category === 'Food');\r\n        let stuffData = this.state.itemList.filter(item => item.category === 'Stuff');\r\n\r\n        let billsTotal = 0;\r\n        let foodTotal = 0;\r\n        let stuffTotal = 0;\r\n        \r\n        billsData.forEach(bill => {\r\n            billsTotal += bill.cost;\r\n        });\r\n        \r\n        foodData.forEach(food => {\r\n            foodTotal += food.cost;\r\n        });\r\n        \r\n        stuffData.forEach(stuff => {\r\n            stuffTotal += stuff.cost;\r\n        });\r\n\r\n        if (this.state.showItemModal) {\r\n            newItemModal = <CreateItemModal />\r\n        }\r\n\r\n        if (this.state.statsGraphType === 'type') {\r\n            statsGraph = <VictoryPie\r\n                colorScale={[\"tomato\", \"gold\", \"navy\"]}\r\n                cornerRadius={7}\r\n                // TODO: get data array from App.jsx\r\n                // data={this.props.data}\r\n                data={[\r\n                    { x: \"Food\", y: ((foodTotal / this.state.total) * 100) },\r\n                    { x: \"Bills\", y: ((billsTotal / this.state.total) * 100) },\r\n                    { x: \"Stuff\", y: ((stuffTotal / this.state.total) * 100) }\r\n                ]}\r\n                height={300}\r\n                innerRadius={50}\r\n            />\r\n        }\r\n        else {\r\n            statsGraph = <VictoryChart\r\n            theme={VictoryTheme.material}\r\n          >\r\n            <VictoryArea\r\n              style={{ data: { fill: \"#c43a31\" } }}\r\n              data={[\r\n                { x: \"Food\", y: foodTotal },\r\n                { x: \"Bills\", y: billsTotal },\r\n                { x: \"Stuff\", y: stuffTotal }\r\n            ]}\r\n            />\r\n          </VictoryChart>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"month-to-date-total\">\r\n                    <p>Spent this month</p>\r\n                    <p>${this.state.total}</p>\r\n                </div>\r\n                <div id=\"month-to-date-graph\">\r\n                    <div className=\"graph-container\">\r\n                        {statsGraph}\r\n                    </div>\r\n                </div>\r\n                <footer className=\"flex-2\">\r\n                    <div className=\"add-item center-content\">\r\n                        <p>Add Item</p>\r\n                        <p id=\"add-item-icon\" onClick={this.showAddItemModal}>\r\n                            <FontAwesomeIcon icon={faPlusSquare} />\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"graph-stats center-content\">\r\n                        <p>See Other Stats</p>\r\n                        <div className=\"flex-2\">\r\n                            <p onClick={this.showStatsByType}>By Type</p>\r\n                            <p onClick={this.showStatsByWeek}>By Week</p>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n                {newItemModal}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBomb } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nimport '../css/Modal.css';\r\n\r\nclass CreateGoalModal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            shouldCloseModal: false\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.saveGoal = this.saveGoal.bind(this);\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            shouldCloseModal: true\r\n        });\r\n    }\r\n\r\n    saveGoal(e) {\r\n        let goalData = {\r\n            completeByDate: e.target.completeByDate.value,\r\n            isComplete: false,\r\n            title: e.target.title.value\r\n        };\r\n\r\n        axios.post('http://localhost:3010/api/createGoal', {\r\n            goalData: goalData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.state.shouldCloseModal ? \"hidden\" : \"modal-container\")}>\r\n                <form onSubmit={this.saveGoal}>\r\n                    <FontAwesomeIcon icon={faBomb}\r\n                        className=\"close-btn\"\r\n                        onClick={this.closeModal} />\r\n                    <div>\r\n                        <label htmlFor=\"title\">Goal: </label>\r\n                        <input type=\"text\" name=\"title\" />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"completeByDate\">Complete By: </label>\r\n                        <input type=\"date\" name=\"completeByDate\" />\r\n                    </div>\r\n                    <button type=\"submit\">Save Goal</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateGoalModal;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare, faCheck, faBomb } from '@fortawesome/free-solid-svg-icons';\r\nimport CreateGoalModal from './CreateGoalModal';\r\nimport axios from 'axios';\r\n\r\nimport '../css/Goals.css';\r\n\r\nclass Goals extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            goalList: [],\r\n            showGoalModal: false\r\n        };\r\n\r\n        this.getAllGoals = this.getAllGoals.bind(this);\r\n        this.showAddGoalModal = this.showAddGoalModal.bind(this);\r\n        this.updateGoalStatus = this.updateGoalStatus.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllGoals();\r\n    }\r\n\r\n    getAllGoals() {\r\n        axios.get('http://localhost:3010/api/getAllGoals')\r\n            .then(goalList => {\r\n                this.setState({\r\n                    goalList: goalList.data\r\n                });\r\n            });\r\n    }\r\n\r\n    showAddGoalModal() {\r\n        let showGoalModal = this.state.showGoalModal;\r\n\r\n        this.setState({\r\n            showGoalModal: !showGoalModal\r\n        });\r\n    }\r\n\r\n    updateGoalStatus(goalId) {\r\n        return goalId;\r\n    }\r\n\r\n    render() {\r\n        let newGoalModal = null;\r\n\r\n        if (this.state.showGoalModal) {\r\n            newGoalModal = <CreateGoalModal />\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"goal-overview\">\r\n                    <p>Remaining Goals: 5</p>\r\n                    <p>Completed Goals: 2</p>\r\n                    <p>Failed Goals: 3</p>\r\n                    <p className=\"add-goal-button\">\r\n                        <label>Add Goal:</label>\r\n                        <FontAwesomeIcon id=\"add-goal-icon\"\r\n                            onClick={this.showAddGoalModal}\r\n                            icon={faPlusSquare} />\r\n                    </p>\r\n                </div>\r\n                {this.state.goalList.map(goal => {\r\n                    let goalStatusIcon = null;\r\n\r\n                    if (this.state.isCompleted) {\r\n                        goalStatusIcon = <FontAwesomeIcon id=\"change-goal-status\"\r\n                            onClick={this.updateGoalStatus}\r\n                            icon={faCheck} />\r\n                    }\r\n                    else {\r\n                        goalStatusIcon = <FontAwesomeIcon id=\"change-goal-status\"\r\n                            icon={faBomb} />\r\n                    }\r\n\r\n                    return <div className=\"row\" key={goal._id}>\r\n                        <div className=\"col-3\">{goal.title}</div>\r\n                        <div className=\"col-3\">{new Date(goal.completeByDate).toLocaleDateString()}</div>\r\n                        <div className=\"col-3\">{goalStatusIcon}</div>\r\n                    </div>;\r\n                })}\r\n                {newGoalModal}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Goals;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CreateItemModal from './CreateItemModal';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nimport '../css/Items.css';\r\n\r\nclass Items extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            itemList: [],\r\n            showItemModal: false,\r\n            total: 0\r\n        };\r\n\r\n        this.getAllItems = this.getAllItems.bind(this);\r\n        this.showAddItemModal = this.showAddItemModal.bind(this);\r\n        this.sortItems = this.sortItems.bind(this);\r\n        this._sortByDate = this._sortByDate.bind(this);\r\n        this._sortByType = this._sortByType.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllItems();\r\n    }\r\n\r\n    getAllItems() {\r\n        axios.get('http://localhost:3010/api/getAllItems')\r\n            .then(itemList => {\r\n                let total = 0;\r\n                \r\n                itemList.data.forEach(item => {\r\n                    total += item.cost;\r\n                });\r\n\r\n                this.setState({\r\n                    itemList: itemList.data,\r\n                    total: total\r\n                });\r\n            });\r\n    }\r\n\r\n    showAddItemModal() {\r\n        let showItemModal = this.state.showItemModal;\r\n        this.setState({\r\n            showItemModal: !showItemModal\r\n        });\r\n    }\r\n\r\n    sortItems(e) {\r\n        let sortBy = e.target.value;\r\n        let sortedItems = [];\r\n\r\n        if (sortBy === \"date\") {\r\n            sortedItems = this.state.itemList.sort(this._sortByDate);\r\n        }\r\n\r\n        if (sortBy === \"type\") {\r\n            sortedItems = this.state.itemList.sort(this._sortByType);\r\n        }\r\n\r\n        this.setState({\r\n            itemList: sortedItems\r\n        });\r\n    }\r\n\r\n    _sortByDate(a, b) {\r\n        let dateA = new Date(a.date).getTime(); \r\n        let dateB = new Date(b.date).getTime(); \r\n\r\n        return dateA > dateB ? 1 : -1;\r\n    }\r\n\r\n    _sortByType(a, b) {\r\n        return a.category > b.category ? 1 : -1;\r\n    }\r\n\r\n    render() {\r\n        let newItemModal = null;\r\n\r\n        if (this.state.showItemModal) {\r\n            newItemModal = <CreateItemModal />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"item-options\">\r\n                    <p>Total: ${this.state.total}</p>\r\n                    <div>\r\n                        <label htmlFor=\"sortBy\">Sort By: </label>\r\n                        <select name=\"sortBy\" onChange={this.sortItems}>\r\n                            <option value=\"type\">Type</option>\r\n                            <option value=\"date\">Date</option>\r\n                        </select>\r\n                    </div>\r\n                    <p className=\"add-item-button\">\r\n                        <label>Add Item:</label>\r\n                        <FontAwesomeIcon id=\"add-item-icon\" onClick={this.showAddItemModal} icon={faPlusSquare} />\r\n                    </p>\r\n                </div>\r\n                {this.state.itemList.map(item => {\r\n                    return <div className=\"row\" key={item._id}>\r\n                        <div className=\"col-3\">{item.title}</div>\r\n                        <div className=\"col-3\">{item.category}</div>\r\n                        <div className=\"col-3\">{new Date(item.date).toLocaleDateString()}</div>\r\n                        <div className=\"col-3\">${item.cost}</div>\r\n                    </div>;\r\n                })}\r\n                {newItemModal}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import React, { Component } from 'react';\r\n\r\nclass Logout extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                logout works\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;","import React, { Component } from 'react';\r\n\r\nclass Settings extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                settings work\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Header from './common/Header';\r\nimport Home from './Home';\r\nimport Goals from '../components/Goals';\r\nimport Items from '../components/Items';\r\nimport Logout from '../components/Logout';\r\nimport Settings from '../components/Settings';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Header />\r\n                </div>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/goals\" component={Goals} />\r\n                <Route path=\"/items\" component={Items} />\r\n                <Route path=\"/logout\" component={Logout} />\r\n                <Route path=\"/settings\" component={Settings} />\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}